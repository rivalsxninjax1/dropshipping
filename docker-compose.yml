services:
  backend:
    build:
      context: ./backend
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  frontend:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host"
    volumes:
      - ./frontend:/app
    environment:
      - VITE_API_BASE=http://backend:8000
    ports:
      - "5173:5173"
    depends_on:
      - backend

  worker:
    build:
      context: ./backend
    command: celery -A backend.celery_app worker -l info
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis

  beat:
    build:
      context: ./backend
    command: celery -A backend.celery_app beat -l info
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db

volumes:
  pgdata:
