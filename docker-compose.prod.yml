services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"

  worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    env_file:
      - .env
    command: ["celery", "-A", "backend.celery_app", "worker", "-l", "info"]
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy

  beat:
    build:
      context: .
      dockerfile: Dockerfile.backend
    env_file:
      - .env
    command: ["celery", "-A", "backend.celery_app", "beat", "-l", "info"]
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "8080:80"

volumes:
  pgdata:
