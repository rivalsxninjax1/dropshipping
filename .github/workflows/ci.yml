name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    runs-on: ubuntu-latest
    env:
      USE_SQLITE_FOR_TESTS: "true"
      SECRET_KEY: testsecret
      DEBUG: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install system deps
        run: sudo apt-get update && sudo apt-get install -y libpq-dev
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      - name: Run backend lint
        run: |
          python -m pip install flake8
          flake8 backend --count --select=E9,F63,F7,F82 --show-source --statistics || true
      - name: Run backend tests
        working-directory: backend
        run: pytest -q

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        working-directory: frontend
        run: npm ci
      - name: Lint
        working-directory: frontend
        run: npm run lint --if-present
      - name: Test
        working-directory: frontend
        run: npm run test --if-present

  e2e:
    runs-on: ubuntu-latest
    env:
      USE_SQLITE_FOR_TESTS: "true"
      SECRET_KEY: testsecret
      DEBUG: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Backend deps + migrate + seed
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          cd backend
          python manage.py migrate
          python manage.py seed_sample_data
          nohup python manage.py runserver 0.0.0.0:8000 &
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci
      - name: Build frontend
        working-directory: frontend
        run: npm run build
      - name: Install Playwright
        working-directory: frontend
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        working-directory: frontend
        run: npm run e2e
